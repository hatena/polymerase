// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/admin/admin.proto

/*
Package admin is a generated protocol buffer package.

It is generated from these files:
	server/admin/admin.proto

It has these top-level messages:
	BackupsRequest
	BackupsResponse
	BackupInfoWithKey
*/
package admin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import statuspb "github.com/taku-k/polymerase/pkg/status/statuspb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BackupsRequest struct {
}

func (m *BackupsRequest) Reset()                    { *m = BackupsRequest{} }
func (m *BackupsRequest) String() string            { return proto.CompactTextString(m) }
func (*BackupsRequest) ProtoMessage()               {}
func (*BackupsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type BackupsResponse struct {
	Backups []*BackupInfoWithKey `protobuf:"bytes,1,rep,name=backups" json:"backups,omitempty"`
}

func (m *BackupsResponse) Reset()                    { *m = BackupsResponse{} }
func (m *BackupsResponse) String() string            { return proto.CompactTextString(m) }
func (*BackupsResponse) ProtoMessage()               {}
func (*BackupsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BackupsResponse) GetBackups() []*BackupInfoWithKey {
	if m != nil {
		return m.Backups
	}
	return nil
}

type BackupInfoWithKey struct {
	Key  string               `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Info *statuspb.BackupInfo `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
}

func (m *BackupInfoWithKey) Reset()                    { *m = BackupInfoWithKey{} }
func (m *BackupInfoWithKey) String() string            { return proto.CompactTextString(m) }
func (*BackupInfoWithKey) ProtoMessage()               {}
func (*BackupInfoWithKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BackupInfoWithKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *BackupInfoWithKey) GetInfo() *statuspb.BackupInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*BackupsRequest)(nil), "admin.BackupsRequest")
	proto.RegisterType((*BackupsResponse)(nil), "admin.BackupsResponse")
	proto.RegisterType((*BackupInfoWithKey)(nil), "admin.BackupInfoWithKey")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Admin service

type AdminClient interface {
	Backups(ctx context.Context, in *BackupsRequest, opts ...grpc.CallOption) (*BackupsResponse, error)
}

type adminClient struct {
	cc *grpc.ClientConn
}

func NewAdminClient(cc *grpc.ClientConn) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) Backups(ctx context.Context, in *BackupsRequest, opts ...grpc.CallOption) (*BackupsResponse, error) {
	out := new(BackupsResponse)
	err := grpc.Invoke(ctx, "/admin.Admin/Backups", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Admin service

type AdminServer interface {
	Backups(context.Context, *BackupsRequest) (*BackupsResponse, error)
}

func RegisterAdminServer(s *grpc.Server, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_Backups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).Backups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Admin/Backups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).Backups(ctx, req.(*BackupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "admin.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Backups",
			Handler:    _Admin_Backups_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server/admin/admin.proto",
}

func init() { proto.RegisterFile("server/admin/admin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xad, 0x73, 0x0e, 0xdf, 0x40, 0x67, 0x50, 0x09, 0x3b, 0x95, 0x9e, 0x7a, 0xb1, 0x81,
	0x7a, 0x13, 0x3c, 0xa8, 0x78, 0x10, 0x0f, 0x42, 0x2f, 0x9e, 0xd3, 0xf9, 0xb6, 0x95, 0xd8, 0x24,
	0xe6, 0x25, 0x42, 0xff, 0x7b, 0x59, 0xd3, 0x8a, 0xba, 0x4b, 0xf2, 0xf2, 0xe5, 0xe3, 0x7b, 0xbf,
	0x0f, 0x38, 0xa1, 0xfb, 0x42, 0x27, 0xe4, 0x7b, 0xdb, 0xe8, 0x78, 0x16, 0xd6, 0x19, 0x6f, 0xd8,
	0xb4, 0x7f, 0x2c, 0xef, 0x36, 0x8d, 0xdf, 0x86, 0xba, 0x58, 0x99, 0x56, 0x78, 0xa9, 0xc2, 0xb5,
	0x12, 0xd6, 0x7c, 0x74, 0x2d, 0x3a, 0x49, 0x28, 0xac, 0xda, 0x08, 0xf2, 0xd2, 0x07, 0x1a, 0x2e,
	0x5b, 0x0f, 0x43, 0x4c, 0xc9, 0x16, 0x70, 0xfa, 0x20, 0x57, 0x2a, 0x58, 0xaa, 0xf0, 0x33, 0x20,
	0xf9, 0xec, 0x09, 0xce, 0x7e, 0x14, 0xb2, 0x46, 0x13, 0xb2, 0x12, 0x66, 0x75, 0x94, 0x78, 0x92,
	0x4e, 0xf2, 0x79, 0xc9, 0x8b, 0x48, 0x12, 0x8d, 0xcf, 0x7a, 0x6d, 0xde, 0x1a, 0xbf, 0x7d, 0xc1,
	0xae, 0x1a, 0x8d, 0xd9, 0x2b, 0x9c, 0xef, 0xfd, 0xb2, 0x05, 0x4c, 0x14, 0x76, 0x3c, 0x49, 0x93,
	0xfc, 0xa4, 0xda, 0x8d, 0x2c, 0x87, 0xa3, 0x46, 0xaf, 0x0d, 0x3f, 0x4c, 0x93, 0x7c, 0x5e, 0x5e,
	0x14, 0x23, 0xe5, 0xaf, 0xe8, 0xaa, 0x77, 0x94, 0x8f, 0x30, 0xbd, 0xdf, 0x2d, 0x65, 0xb7, 0x30,
	0x1b, 0x00, 0xd9, 0xe5, 0x1f, 0x8e, 0xb1, 0xc2, 0xf2, 0xea, 0xbf, 0x1c, 0x7b, 0x64, 0x07, 0xf5,
	0x71, 0xdf, 0xfa, 0xe6, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x13, 0x73, 0xc9, 0x57, 0x01, 0x00,
	0x00,
}
