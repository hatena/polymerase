// Code generated by protoc-gen-go. DO NOT EDIT.
// source: status/statuspb/status.proto

/*
Package statuspb is a generated protocol buffer package.

It is generated from these files:
	status/statuspb/status.proto

It has these top-level messages:
	DiskInfo
	NodeInfo
	NodeInfoMap
	BackupInfo
	FullBackupInfo
	IncBackupInfo
	AllBackups
*/
package statuspb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StoredType int32

const (
	StoredType_LOCAL StoredType = 0
)

var StoredType_name = map[int32]string{
	0: "LOCAL",
}
var StoredType_value = map[string]int32{
	"LOCAL": 0,
}

func (x StoredType) String() string {
	return proto.EnumName(StoredType_name, int32(x))
}
func (StoredType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DiskInfo struct {
	Total uint64 `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Avail uint64 `protobuf:"varint,2,opt,name=avail" json:"avail,omitempty"`
}

func (m *DiskInfo) Reset()                    { *m = DiskInfo{} }
func (m *DiskInfo) String() string            { return proto.CompactTextString(m) }
func (*DiskInfo) ProtoMessage()               {}
func (*DiskInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DiskInfo) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *DiskInfo) GetAvail() uint64 {
	if m != nil {
		return m.Avail
	}
	return 0
}

type NodeInfo struct {
	DiskInfo *DiskInfo `protobuf:"bytes,1,opt,name=diskInfo" json:"diskInfo,omitempty"`
	Addr     string    `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	StoreDir string    `protobuf:"bytes,3,opt,name=store_dir,json=storeDir" json:"store_dir,omitempty"`
}

func (m *NodeInfo) Reset()                    { *m = NodeInfo{} }
func (m *NodeInfo) String() string            { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()               {}
func (*NodeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NodeInfo) GetDiskInfo() *DiskInfo {
	if m != nil {
		return m.DiskInfo
	}
	return nil
}

func (m *NodeInfo) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *NodeInfo) GetStoreDir() string {
	if m != nil {
		return m.StoreDir
	}
	return ""
}

type NodeInfoMap struct {
	Nodes map[string]*NodeInfo `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *NodeInfoMap) Reset()                    { *m = NodeInfoMap{} }
func (m *NodeInfoMap) String() string            { return proto.CompactTextString(m) }
func (*NodeInfoMap) ProtoMessage()               {}
func (*NodeInfoMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NodeInfoMap) GetNodes() map[string]*NodeInfo {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type BackupInfo struct {
	FullBackup *FullBackupInfo  `protobuf:"bytes,1,opt,name=full_backup,json=fullBackup" json:"full_backup,omitempty"`
	IncBackups []*IncBackupInfo `protobuf:"bytes,2,rep,name=inc_backups,json=incBackups" json:"inc_backups,omitempty"`
}

func (m *BackupInfo) Reset()                    { *m = BackupInfo{} }
func (m *BackupInfo) String() string            { return proto.CompactTextString(m) }
func (*BackupInfo) ProtoMessage()               {}
func (*BackupInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BackupInfo) GetFullBackup() *FullBackupInfo {
	if m != nil {
		return m.FullBackup
	}
	return nil
}

func (m *BackupInfo) GetIncBackups() []*IncBackupInfo {
	if m != nil {
		return m.IncBackups
	}
	return nil
}

type FullBackupInfo struct {
	StoredTime *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=stored_time,json=storedTime" json:"stored_time,omitempty"`
	NodeName   string                     `protobuf:"bytes,2,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	Host       string                     `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	StoredType StoredType                 `protobuf:"varint,4,opt,name=stored_type,json=storedType,enum=statuspb.StoredType" json:"stored_type,omitempty"`
}

func (m *FullBackupInfo) Reset()                    { *m = FullBackupInfo{} }
func (m *FullBackupInfo) String() string            { return proto.CompactTextString(m) }
func (*FullBackupInfo) ProtoMessage()               {}
func (*FullBackupInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *FullBackupInfo) GetStoredTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.StoredTime
	}
	return nil
}

func (m *FullBackupInfo) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *FullBackupInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *FullBackupInfo) GetStoredType() StoredType {
	if m != nil {
		return m.StoredType
	}
	return StoredType_LOCAL
}

type IncBackupInfo struct {
	StoredTime *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=stored_time,json=storedTime" json:"stored_time,omitempty"`
	NodeName   string                     `protobuf:"bytes,2,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	Host       string                     `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	StoredType StoredType                 `protobuf:"varint,4,opt,name=stored_type,json=storedType,enum=statuspb.StoredType" json:"stored_type,omitempty"`
}

func (m *IncBackupInfo) Reset()                    { *m = IncBackupInfo{} }
func (m *IncBackupInfo) String() string            { return proto.CompactTextString(m) }
func (*IncBackupInfo) ProtoMessage()               {}
func (*IncBackupInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *IncBackupInfo) GetStoredTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.StoredTime
	}
	return nil
}

func (m *IncBackupInfo) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *IncBackupInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *IncBackupInfo) GetStoredType() StoredType {
	if m != nil {
		return m.StoredType
	}
	return StoredType_LOCAL
}

type AllBackups struct {
	DbToBackups map[string]*BackupInfo `protobuf:"bytes,1,rep,name=db_to_backups,json=dbToBackups" json:"db_to_backups,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *AllBackups) Reset()                    { *m = AllBackups{} }
func (m *AllBackups) String() string            { return proto.CompactTextString(m) }
func (*AllBackups) ProtoMessage()               {}
func (*AllBackups) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AllBackups) GetDbToBackups() map[string]*BackupInfo {
	if m != nil {
		return m.DbToBackups
	}
	return nil
}

func init() {
	proto.RegisterType((*DiskInfo)(nil), "statuspb.DiskInfo")
	proto.RegisterType((*NodeInfo)(nil), "statuspb.NodeInfo")
	proto.RegisterType((*NodeInfoMap)(nil), "statuspb.NodeInfoMap")
	proto.RegisterType((*BackupInfo)(nil), "statuspb.BackupInfo")
	proto.RegisterType((*FullBackupInfo)(nil), "statuspb.FullBackupInfo")
	proto.RegisterType((*IncBackupInfo)(nil), "statuspb.IncBackupInfo")
	proto.RegisterType((*AllBackups)(nil), "statuspb.AllBackups")
	proto.RegisterEnum("statuspb.StoredType", StoredType_name, StoredType_value)
}

func init() { proto.RegisterFile("status/statuspb/status.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 486 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x52, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0x76, 0xb6, 0xad, 0xa4, 0x27, 0xec, 0x52, 0x86, 0x85, 0x0d, 0x55, 0xb0, 0x04, 0x84, 0xb2,
	0x17, 0x29, 0x54, 0x5c, 0x56, 0xbd, 0x5a, 0xad, 0x42, 0xa1, 0xae, 0x10, 0x7b, 0x1f, 0x26, 0x9d,
	0xe9, 0x1a, 0x9a, 0x66, 0x42, 0x66, 0xb2, 0x90, 0x4b, 0x9f, 0xc1, 0xe7, 0xf0, 0x4e, 0xdf, 0x4f,
	0x72, 0x26, 0xd3, 0x69, 0xc5, 0x17, 0xf0, 0x2a, 0x67, 0xbe, 0x7c, 0xe7, 0x3b, 0x7f, 0x1f, 0x3c,
	0x57, 0x9a, 0xe9, 0x5a, 0xcd, 0xcc, 0xa7, 0x4c, 0xbb, 0x20, 0x2a, 0x2b, 0xa9, 0x25, 0xf5, 0x2c,
	0x3c, 0x7e, 0xf1, 0x20, 0xe5, 0x43, 0x2e, 0x66, 0x88, 0xa7, 0xf5, 0x76, 0xa6, 0xb3, 0xbd, 0x50,
	0x9a, 0xed, 0x4b, 0x43, 0x0d, 0x6f, 0xc0, 0x5b, 0x64, 0x6a, 0xb7, 0x2c, 0xb6, 0x92, 0x5e, 0xc2,
	0x40, 0x4b, 0xcd, 0xf2, 0x80, 0x4c, 0xc8, 0xb4, 0x1f, 0x9b, 0x47, 0x8b, 0xb2, 0x47, 0x96, 0xe5,
	0xc1, 0x99, 0x41, 0xf1, 0x11, 0xee, 0xc0, 0xbb, 0x97, 0x5c, 0x60, 0x5e, 0x04, 0x1e, 0xef, 0x34,
	0x30, 0xd5, 0x9f, 0xd3, 0xc8, 0x76, 0x10, 0x59, 0xf5, 0xf8, 0xc0, 0xa1, 0x14, 0xfa, 0x8c, 0xf3,
	0x0a, 0x05, 0x87, 0x31, 0xc6, 0xf4, 0x19, 0x0c, 0x95, 0x96, 0x95, 0x48, 0x78, 0x56, 0x05, 0x3d,
	0xfc, 0xe1, 0x21, 0xb0, 0xc8, 0xaa, 0xf0, 0x07, 0x01, 0xdf, 0x56, 0xfb, 0xcc, 0x4a, 0x7a, 0x03,
	0x83, 0x42, 0x72, 0xa1, 0x02, 0x32, 0xe9, 0x4d, 0xfd, 0xf9, 0xc4, 0x55, 0x3b, 0x62, 0x61, 0xac,
	0x3e, 0x16, 0xba, 0x6a, 0x62, 0x43, 0x1f, 0xaf, 0x00, 0x1c, 0x48, 0x47, 0xd0, 0xdb, 0x89, 0x06,
	0x3b, 0x1e, 0xc6, 0x6d, 0x48, 0xa7, 0x30, 0x78, 0x64, 0x79, 0x2d, 0xb0, 0xb3, 0x93, 0x29, 0xac,
	0x6e, 0x6c, 0x08, 0x6f, 0xcf, 0x6e, 0x49, 0xf8, 0x9d, 0x00, 0xbc, 0x67, 0x9b, 0x5d, 0x5d, 0xe2,
	0x54, 0x6f, 0xc0, 0xdf, 0xd6, 0x79, 0x9e, 0xa4, 0x08, 0x75, 0x8b, 0x08, 0x9c, 0xc4, 0xa7, 0x3a,
	0xcf, 0x1d, 0x3d, 0x86, 0xed, 0xe1, 0x4d, 0x6f, 0xc1, 0xcf, 0x8a, 0x4d, 0x97, 0xa9, 0x82, 0x33,
	0x9c, 0xea, 0xca, 0xa5, 0x2e, 0x8b, 0xcd, 0x71, 0x66, 0x66, 0x9f, 0x2a, 0xfc, 0x4d, 0xe0, 0xe2,
	0x54, 0x98, 0xbe, 0x03, 0x1f, 0x17, 0xc7, 0x93, 0xf6, 0xd6, 0x5d, 0x1f, 0xe3, 0xc8, 0x18, 0x21,
	0xb2, 0x46, 0x88, 0xd6, 0xd6, 0x08, 0x31, 0x18, 0x7a, 0x0b, 0xb4, 0x67, 0x68, 0x57, 0x95, 0x14,
	0x6c, 0x2f, 0xba, 0xfb, 0x78, 0x2d, 0x70, 0xcf, 0xf6, 0xa2, 0xbd, 0xdb, 0x37, 0xa9, 0x74, 0x77,
	0x1e, 0x8c, 0xe9, 0x6b, 0x57, 0xad, 0x29, 0x45, 0xd0, 0x9f, 0x90, 0xe9, 0xc5, 0xfc, 0xd2, 0xb5,
	0xfe, 0xd5, 0x68, 0x37, 0xa5, 0x38, 0xd4, 0x69, 0x4a, 0x11, 0xfe, 0x22, 0x70, 0x7e, 0x32, 0xd5,
	0xff, 0xd1, 0xf6, 0x4f, 0x02, 0x70, 0x67, 0xb7, 0xad, 0xe8, 0x12, 0xce, 0x79, 0x9a, 0x68, 0x79,
	0xb8, 0x9c, 0xf1, 0xe3, 0x4b, 0xa7, 0xe3, 0xc8, 0xd1, 0x22, 0x5d, 0xcb, 0x2e, 0x36, 0xa6, 0xf4,
	0xb9, 0x43, 0xc6, 0x6b, 0x18, 0xfd, 0x4d, 0xf8, 0x87, 0x41, 0xaf, 0x4f, 0x0d, 0x7a, 0xd4, 0xf0,
	0x91, 0x3f, 0x9c, 0x45, 0xaf, 0xaf, 0x00, 0xdc, 0x24, 0x74, 0x08, 0x83, 0xd5, 0x97, 0x0f, 0x77,
	0xab, 0xd1, 0x93, 0xf4, 0x29, 0x2e, 0xf4, 0xd5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc8, 0xbe,
	0x78, 0x88, 0x48, 0x04, 0x00, 0x00,
}
