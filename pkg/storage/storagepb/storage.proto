syntax = "proto3";
package storagepb;

import "google/protobuf/timestamp.proto";
import "github.com/taku-k/polymerase/pkg/polypb/metadata.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service StorageService {
  rpc GetLatestToLSN(GetLatestToLSNRequest) returns (GetLatestToLSNResponse) {};

  rpc GetKeysAtPoint(GetKeysAtPointRequest) returns (GetKeysAtPointResponse) {};

  rpc GetFileByKey(GetFileByKeyRequest) returns (stream FileStream) {};

  rpc PurgePrevBackup(PurgePrevBackupRequest) returns (PurgePrevBackupResponse) {};

  rpc TransferBackup(stream BackupStream) returns (BackupReply) {};
}

message GetLatestToLSNRequest {
  bytes db = 1 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.DatabaseID"];
}

message GetLatestToLSNResponse {
  string lsn = 1;
}

message GetKeysAtPointRequest {
  bytes db = 1 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.DatabaseID"];
  google.protobuf.Timestamp from = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message GetKeysAtPointResponse {
  repeated BackupFileInfo keys = 1;
}

message BackupFileInfo {
  polypb.StorageType storage_type = 1;
  polypb.BackupType backup_type = 2;
  bytes key = 3 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.Key"];
  int64 file_size = 4;
}

message GetFileByKeyRequest {
  bytes key = 1 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.Key"];
  polypb.StorageType storage_type = 2;
}

message FileStream {
  bytes content = 1;
}

message PurgePrevBackupRequest {
  bytes db = 1 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.DatabaseID"];
}

message PurgePrevBackupResponse {
  string message = 1;
}

message BackupStream {
  oneof request {
    InitializeRequest initialize_request = 1;
    BackupRequest backup_request = 2;
    CheckpointRequest checkpoint_request = 3;
    ClientErrorRequest client_error_request = 4;
  }
}

message InitializeRequest {
  polypb.BackupType backup_type = 1;
  bytes db = 2 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.DatabaseID"];
  string lsn = 3;
}

message BackupRequest {
  bytes content = 1;
}

message CheckpointRequest {
  bytes body = 1;
}

message ClientErrorRequest {
  string message = 1;
}

message BackupReply {
  string message = 1;
  bytes key = 2 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.Key"];
}
