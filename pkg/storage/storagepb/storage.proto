syntax = "proto3";
package storagepb;

import "github.com/taku-k/polymerase/pkg/polypb/metadata.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service StorageService {
  rpc GetLatestToLSN(GetLatestToLSNRequest) returns (GetLatestToLSNResponse) {};

  rpc GetKeysAtPoint(GetKeysAtPointRequest) returns (GetKeysAtPointResponse) {};

  rpc GetFileByKey(GetFileByKeyRequest) returns (stream FileStream) {};

  rpc PurgePrevBackup(PurgePrevBackupRequest) returns (PurgePrevBackupResponse) {};

  rpc TransferFullBackup(stream FullBackupContentStream) returns (BackupReply) {};

  rpc TransferIncBackup(stream IncBackupContentStream) returns (BackupReply) {};

  rpc PostCheckpoints(PostCheckpointsRequest) returns (PostCheckpointsResponse) {};
}

message GetLatestToLSNRequest {
  bytes db = 1 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.DatabaseID"];
}

message GetLatestToLSNResponse {
  string lsn = 1;
}

message GetKeysAtPointRequest {
  bytes db = 1 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.DatabaseID"];
  string from = 2;
}

message GetKeysAtPointResponse {
  repeated BackupFileInfo keys = 1;
}

message BackupFileInfo {
  polypb.StorageType storage_type = 1;
  polypb.BackupType backup_type = 2;
  bytes key = 3 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.Key"];
  int64 file_size = 4;
}

message GetFileByKeyRequest {
  bytes key = 1 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.Key"];
  polypb.StorageType storage_type = 2;
}

message FileStream {
  bytes content = 1;
}

message PurgePrevBackupRequest {
  bytes db = 1 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.DatabaseID"];
}

message PurgePrevBackupResponse {
  string message = 1;
}

message FullBackupContentStream {
  bytes db = 1 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.DatabaseID"];
  bytes content = 2;
}

message IncBackupContentStream {
  bytes db = 1 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.DatabaseID"];
  string lsn = 2;
  bytes content = 3;
}

message BackupReply {
  string message = 1;
  bytes key = 2 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.Key"];
}

message PostCheckpointsRequest {
  bytes key = 1 [(gogoproto.casttype) = "github.com/taku-k/polymerase/pkg/polypb.Key"];
  bytes content = 2;
}

message PostCheckpointsResponse {
  string message = 1;
}
