/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.statuspb.AllBackups', null, global);
goog.exportSymbol('proto.statuspb.BackupInfo', null, global);
goog.exportSymbol('proto.statuspb.DiskInfo', null, global);
goog.exportSymbol('proto.statuspb.FullBackupInfo', null, global);
goog.exportSymbol('proto.statuspb.IncBackupInfo', null, global);
goog.exportSymbol('proto.statuspb.NodeInfo', null, global);
goog.exportSymbol('proto.statuspb.NodeInfoMap', null, global);
goog.exportSymbol('proto.statuspb.StoredType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statuspb.DiskInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statuspb.DiskInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statuspb.DiskInfo.displayName = 'proto.statuspb.DiskInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statuspb.DiskInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.statuspb.DiskInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statuspb.DiskInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.statuspb.DiskInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0),
    avail: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statuspb.DiskInfo}
 */
proto.statuspb.DiskInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statuspb.DiskInfo;
  return proto.statuspb.DiskInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statuspb.DiskInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statuspb.DiskInfo}
 */
proto.statuspb.DiskInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotal(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAvail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statuspb.DiskInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statuspb.DiskInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statuspb.DiskInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.statuspb.DiskInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAvail();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 total = 1;
 * @return {number}
 */
proto.statuspb.DiskInfo.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.statuspb.DiskInfo.prototype.setTotal = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 avail = 2;
 * @return {number}
 */
proto.statuspb.DiskInfo.prototype.getAvail = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.statuspb.DiskInfo.prototype.setAvail = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statuspb.NodeInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statuspb.NodeInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statuspb.NodeInfo.displayName = 'proto.statuspb.NodeInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statuspb.NodeInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.statuspb.NodeInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statuspb.NodeInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.statuspb.NodeInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    diskinfo: (f = msg.getDiskinfo()) && proto.statuspb.DiskInfo.toObject(includeInstance, f),
    addr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    storeDir: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statuspb.NodeInfo}
 */
proto.statuspb.NodeInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statuspb.NodeInfo;
  return proto.statuspb.NodeInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statuspb.NodeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statuspb.NodeInfo}
 */
proto.statuspb.NodeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.statuspb.DiskInfo;
      reader.readMessage(value,proto.statuspb.DiskInfo.deserializeBinaryFromReader);
      msg.setDiskinfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreDir(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statuspb.NodeInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statuspb.NodeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statuspb.NodeInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.statuspb.NodeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDiskinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.statuspb.DiskInfo.serializeBinaryToWriter
    );
  }
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStoreDir();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional DiskInfo diskInfo = 1;
 * @return {?proto.statuspb.DiskInfo}
 */
proto.statuspb.NodeInfo.prototype.getDiskinfo = function() {
  return /** @type{?proto.statuspb.DiskInfo} */ (
    jspb.Message.getWrapperField(this, proto.statuspb.DiskInfo, 1));
};


/** @param {?proto.statuspb.DiskInfo|undefined} value */
proto.statuspb.NodeInfo.prototype.setDiskinfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.statuspb.NodeInfo.prototype.clearDiskinfo = function() {
  this.setDiskinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statuspb.NodeInfo.prototype.hasDiskinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string addr = 2;
 * @return {string}
 */
proto.statuspb.NodeInfo.prototype.getAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.statuspb.NodeInfo.prototype.setAddr = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string store_dir = 3;
 * @return {string}
 */
proto.statuspb.NodeInfo.prototype.getStoreDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.statuspb.NodeInfo.prototype.setStoreDir = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statuspb.NodeInfoMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statuspb.NodeInfoMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statuspb.NodeInfoMap.displayName = 'proto.statuspb.NodeInfoMap';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statuspb.NodeInfoMap.prototype.toObject = function(opt_includeInstance) {
  return proto.statuspb.NodeInfoMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statuspb.NodeInfoMap} msg The msg instance to transform.
 * @return {!Object}
 */
proto.statuspb.NodeInfoMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodesMap: (f = msg.getNodesMap()) ? f.toObject(includeInstance, proto.statuspb.NodeInfo.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statuspb.NodeInfoMap}
 */
proto.statuspb.NodeInfoMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statuspb.NodeInfoMap;
  return proto.statuspb.NodeInfoMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statuspb.NodeInfoMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statuspb.NodeInfoMap}
 */
proto.statuspb.NodeInfoMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getNodesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.statuspb.NodeInfo.deserializeBinaryFromReader);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statuspb.NodeInfoMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statuspb.NodeInfoMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statuspb.NodeInfoMap} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.statuspb.NodeInfoMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.statuspb.NodeInfo.serializeBinaryToWriter);
  }
};


/**
 * map<string, NodeInfo> nodes = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.statuspb.NodeInfo>}
 */
proto.statuspb.NodeInfoMap.prototype.getNodesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.statuspb.NodeInfo>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.statuspb.NodeInfo));
};


proto.statuspb.NodeInfoMap.prototype.clearNodesMap = function() {
  this.getNodesMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statuspb.BackupInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.statuspb.BackupInfo.repeatedFields_, null);
};
goog.inherits(proto.statuspb.BackupInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statuspb.BackupInfo.displayName = 'proto.statuspb.BackupInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.statuspb.BackupInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statuspb.BackupInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.statuspb.BackupInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statuspb.BackupInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.statuspb.BackupInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    fullBackup: (f = msg.getFullBackup()) && proto.statuspb.FullBackupInfo.toObject(includeInstance, f),
    incBackupsList: jspb.Message.toObjectList(msg.getIncBackupsList(),
    proto.statuspb.IncBackupInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statuspb.BackupInfo}
 */
proto.statuspb.BackupInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statuspb.BackupInfo;
  return proto.statuspb.BackupInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statuspb.BackupInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statuspb.BackupInfo}
 */
proto.statuspb.BackupInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.statuspb.FullBackupInfo;
      reader.readMessage(value,proto.statuspb.FullBackupInfo.deserializeBinaryFromReader);
      msg.setFullBackup(value);
      break;
    case 2:
      var value = new proto.statuspb.IncBackupInfo;
      reader.readMessage(value,proto.statuspb.IncBackupInfo.deserializeBinaryFromReader);
      msg.addIncBackups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statuspb.BackupInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statuspb.BackupInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statuspb.BackupInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.statuspb.BackupInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFullBackup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.statuspb.FullBackupInfo.serializeBinaryToWriter
    );
  }
  f = message.getIncBackupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.statuspb.IncBackupInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional FullBackupInfo full_backup = 1;
 * @return {?proto.statuspb.FullBackupInfo}
 */
proto.statuspb.BackupInfo.prototype.getFullBackup = function() {
  return /** @type{?proto.statuspb.FullBackupInfo} */ (
    jspb.Message.getWrapperField(this, proto.statuspb.FullBackupInfo, 1));
};


/** @param {?proto.statuspb.FullBackupInfo|undefined} value */
proto.statuspb.BackupInfo.prototype.setFullBackup = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.statuspb.BackupInfo.prototype.clearFullBackup = function() {
  this.setFullBackup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statuspb.BackupInfo.prototype.hasFullBackup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated IncBackupInfo inc_backups = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.statuspb.IncBackupInfo>}
 */
proto.statuspb.BackupInfo.prototype.getIncBackupsList = function() {
  return /** @type{!Array.<!proto.statuspb.IncBackupInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.statuspb.IncBackupInfo, 2));
};


/** @param {!Array.<!proto.statuspb.IncBackupInfo>} value */
proto.statuspb.BackupInfo.prototype.setIncBackupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.statuspb.IncBackupInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.statuspb.IncBackupInfo}
 */
proto.statuspb.BackupInfo.prototype.addIncBackups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.statuspb.IncBackupInfo, opt_index);
};


proto.statuspb.BackupInfo.prototype.clearIncBackupsList = function() {
  this.setIncBackupsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statuspb.FullBackupInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statuspb.FullBackupInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statuspb.FullBackupInfo.displayName = 'proto.statuspb.FullBackupInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statuspb.FullBackupInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.statuspb.FullBackupInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statuspb.FullBackupInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.statuspb.FullBackupInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    storedTime: (f = msg.getStoredTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    nodeName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    host: jspb.Message.getFieldWithDefault(msg, 3, ""),
    storedType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    fileSize: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statuspb.FullBackupInfo}
 */
proto.statuspb.FullBackupInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statuspb.FullBackupInfo;
  return proto.statuspb.FullBackupInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statuspb.FullBackupInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statuspb.FullBackupInfo}
 */
proto.statuspb.FullBackupInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStoredTime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 4:
      var value = /** @type {!proto.statuspb.StoredType} */ (reader.readEnum());
      msg.setStoredType(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFileSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statuspb.FullBackupInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statuspb.FullBackupInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statuspb.FullBackupInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.statuspb.FullBackupInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoredTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStoredType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFileSize();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp stored_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.statuspb.FullBackupInfo.prototype.getStoredTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.statuspb.FullBackupInfo.prototype.setStoredTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.statuspb.FullBackupInfo.prototype.clearStoredTime = function() {
  this.setStoredTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statuspb.FullBackupInfo.prototype.hasStoredTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string node_name = 2;
 * @return {string}
 */
proto.statuspb.FullBackupInfo.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.statuspb.FullBackupInfo.prototype.setNodeName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string host = 3;
 * @return {string}
 */
proto.statuspb.FullBackupInfo.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.statuspb.FullBackupInfo.prototype.setHost = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional StoredType stored_type = 4;
 * @return {!proto.statuspb.StoredType}
 */
proto.statuspb.FullBackupInfo.prototype.getStoredType = function() {
  return /** @type {!proto.statuspb.StoredType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.statuspb.StoredType} value */
proto.statuspb.FullBackupInfo.prototype.setStoredType = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp end_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.statuspb.FullBackupInfo.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.statuspb.FullBackupInfo.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.statuspb.FullBackupInfo.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statuspb.FullBackupInfo.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 file_size = 6;
 * @return {number}
 */
proto.statuspb.FullBackupInfo.prototype.getFileSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.statuspb.FullBackupInfo.prototype.setFileSize = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statuspb.IncBackupInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statuspb.IncBackupInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statuspb.IncBackupInfo.displayName = 'proto.statuspb.IncBackupInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statuspb.IncBackupInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.statuspb.IncBackupInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statuspb.IncBackupInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.statuspb.IncBackupInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    storedTime: (f = msg.getStoredTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    nodeName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    host: jspb.Message.getFieldWithDefault(msg, 3, ""),
    storedType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    fileSize: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statuspb.IncBackupInfo}
 */
proto.statuspb.IncBackupInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statuspb.IncBackupInfo;
  return proto.statuspb.IncBackupInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statuspb.IncBackupInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statuspb.IncBackupInfo}
 */
proto.statuspb.IncBackupInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStoredTime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 4:
      var value = /** @type {!proto.statuspb.StoredType} */ (reader.readEnum());
      msg.setStoredType(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFileSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statuspb.IncBackupInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statuspb.IncBackupInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statuspb.IncBackupInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.statuspb.IncBackupInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoredTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStoredType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFileSize();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp stored_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.statuspb.IncBackupInfo.prototype.getStoredTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.statuspb.IncBackupInfo.prototype.setStoredTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.statuspb.IncBackupInfo.prototype.clearStoredTime = function() {
  this.setStoredTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statuspb.IncBackupInfo.prototype.hasStoredTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string node_name = 2;
 * @return {string}
 */
proto.statuspb.IncBackupInfo.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.statuspb.IncBackupInfo.prototype.setNodeName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string host = 3;
 * @return {string}
 */
proto.statuspb.IncBackupInfo.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.statuspb.IncBackupInfo.prototype.setHost = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional StoredType stored_type = 4;
 * @return {!proto.statuspb.StoredType}
 */
proto.statuspb.IncBackupInfo.prototype.getStoredType = function() {
  return /** @type {!proto.statuspb.StoredType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.statuspb.StoredType} value */
proto.statuspb.IncBackupInfo.prototype.setStoredType = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp end_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.statuspb.IncBackupInfo.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.statuspb.IncBackupInfo.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.statuspb.IncBackupInfo.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statuspb.IncBackupInfo.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 file_size = 6;
 * @return {number}
 */
proto.statuspb.IncBackupInfo.prototype.getFileSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.statuspb.IncBackupInfo.prototype.setFileSize = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statuspb.AllBackups = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statuspb.AllBackups, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statuspb.AllBackups.displayName = 'proto.statuspb.AllBackups';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statuspb.AllBackups.prototype.toObject = function(opt_includeInstance) {
  return proto.statuspb.AllBackups.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statuspb.AllBackups} msg The msg instance to transform.
 * @return {!Object}
 */
proto.statuspb.AllBackups.toObject = function(includeInstance, msg) {
  var f, obj = {
    dbToBackupsMap: (f = msg.getDbToBackupsMap()) ? f.toObject(includeInstance, proto.statuspb.BackupInfo.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statuspb.AllBackups}
 */
proto.statuspb.AllBackups.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statuspb.AllBackups;
  return proto.statuspb.AllBackups.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statuspb.AllBackups} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statuspb.AllBackups}
 */
proto.statuspb.AllBackups.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getDbToBackupsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.statuspb.BackupInfo.deserializeBinaryFromReader);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statuspb.AllBackups.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statuspb.AllBackups.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statuspb.AllBackups} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.statuspb.AllBackups.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDbToBackupsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.statuspb.BackupInfo.serializeBinaryToWriter);
  }
};


/**
 * map<string, BackupInfo> db_to_backups = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.statuspb.BackupInfo>}
 */
proto.statuspb.AllBackups.prototype.getDbToBackupsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.statuspb.BackupInfo>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.statuspb.BackupInfo));
};


proto.statuspb.AllBackups.prototype.clearDbToBackupsMap = function() {
  this.getDbToBackupsMap().clear();
};


/**
 * @enum {number}
 */
proto.statuspb.StoredType = {
  LOCAL: 0
};

goog.object.extend(exports, proto.statuspb);
