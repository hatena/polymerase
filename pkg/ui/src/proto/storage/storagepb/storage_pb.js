/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.storagepb.BackupFileInfo', null, global);
goog.exportSymbol('proto.storagepb.FileStream', null, global);
goog.exportSymbol('proto.storagepb.GetBestStartTimeRequest', null, global);
goog.exportSymbol('proto.storagepb.GetBestStartTimeResponse', null, global);
goog.exportSymbol('proto.storagepb.GetFileByKeyRequest', null, global);
goog.exportSymbol('proto.storagepb.GetKeysAtPointRequest', null, global);
goog.exportSymbol('proto.storagepb.GetKeysAtPointResponse', null, global);
goog.exportSymbol('proto.storagepb.GetLatestToLSNRequest', null, global);
goog.exportSymbol('proto.storagepb.GetLatestToLSNResponse', null, global);
goog.exportSymbol('proto.storagepb.PurgePrevBackupRequest', null, global);
goog.exportSymbol('proto.storagepb.PurgePrevBackupResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storagepb.GetLatestToLSNRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.storagepb.GetLatestToLSNRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storagepb.GetLatestToLSNRequest.displayName = 'proto.storagepb.GetLatestToLSNRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storagepb.GetLatestToLSNRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.storagepb.GetLatestToLSNRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storagepb.GetLatestToLSNRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.storagepb.GetLatestToLSNRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storagepb.GetLatestToLSNRequest}
 */
proto.storagepb.GetLatestToLSNRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storagepb.GetLatestToLSNRequest;
  return proto.storagepb.GetLatestToLSNRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storagepb.GetLatestToLSNRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storagepb.GetLatestToLSNRequest}
 */
proto.storagepb.GetLatestToLSNRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storagepb.GetLatestToLSNRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storagepb.GetLatestToLSNRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storagepb.GetLatestToLSNRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.storagepb.GetLatestToLSNRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.storagepb.GetLatestToLSNRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.storagepb.GetLatestToLSNRequest.prototype.setDb = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storagepb.GetLatestToLSNResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.storagepb.GetLatestToLSNResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storagepb.GetLatestToLSNResponse.displayName = 'proto.storagepb.GetLatestToLSNResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storagepb.GetLatestToLSNResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.storagepb.GetLatestToLSNResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storagepb.GetLatestToLSNResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.storagepb.GetLatestToLSNResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    lsn: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storagepb.GetLatestToLSNResponse}
 */
proto.storagepb.GetLatestToLSNResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storagepb.GetLatestToLSNResponse;
  return proto.storagepb.GetLatestToLSNResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storagepb.GetLatestToLSNResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storagepb.GetLatestToLSNResponse}
 */
proto.storagepb.GetLatestToLSNResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLsn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storagepb.GetLatestToLSNResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storagepb.GetLatestToLSNResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storagepb.GetLatestToLSNResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.storagepb.GetLatestToLSNResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLsn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string lsn = 1;
 * @return {string}
 */
proto.storagepb.GetLatestToLSNResponse.prototype.getLsn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.storagepb.GetLatestToLSNResponse.prototype.setLsn = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storagepb.GetKeysAtPointRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.storagepb.GetKeysAtPointRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storagepb.GetKeysAtPointRequest.displayName = 'proto.storagepb.GetKeysAtPointRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storagepb.GetKeysAtPointRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.storagepb.GetKeysAtPointRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storagepb.GetKeysAtPointRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.storagepb.GetKeysAtPointRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storagepb.GetKeysAtPointRequest}
 */
proto.storagepb.GetKeysAtPointRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storagepb.GetKeysAtPointRequest;
  return proto.storagepb.GetKeysAtPointRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storagepb.GetKeysAtPointRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storagepb.GetKeysAtPointRequest}
 */
proto.storagepb.GetKeysAtPointRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storagepb.GetKeysAtPointRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storagepb.GetKeysAtPointRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storagepb.GetKeysAtPointRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.storagepb.GetKeysAtPointRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.storagepb.GetKeysAtPointRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.storagepb.GetKeysAtPointRequest.prototype.setDb = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string from = 2;
 * @return {string}
 */
proto.storagepb.GetKeysAtPointRequest.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.storagepb.GetKeysAtPointRequest.prototype.setFrom = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storagepb.GetKeysAtPointResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.storagepb.GetKeysAtPointResponse.repeatedFields_, null);
};
goog.inherits(proto.storagepb.GetKeysAtPointResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storagepb.GetKeysAtPointResponse.displayName = 'proto.storagepb.GetKeysAtPointResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.storagepb.GetKeysAtPointResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storagepb.GetKeysAtPointResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.storagepb.GetKeysAtPointResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storagepb.GetKeysAtPointResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.storagepb.GetKeysAtPointResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    keysList: jspb.Message.toObjectList(msg.getKeysList(),
    proto.storagepb.BackupFileInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storagepb.GetKeysAtPointResponse}
 */
proto.storagepb.GetKeysAtPointResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storagepb.GetKeysAtPointResponse;
  return proto.storagepb.GetKeysAtPointResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storagepb.GetKeysAtPointResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storagepb.GetKeysAtPointResponse}
 */
proto.storagepb.GetKeysAtPointResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.storagepb.BackupFileInfo;
      reader.readMessage(value,proto.storagepb.BackupFileInfo.deserializeBinaryFromReader);
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storagepb.GetKeysAtPointResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storagepb.GetKeysAtPointResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storagepb.GetKeysAtPointResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.storagepb.GetKeysAtPointResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.storagepb.BackupFileInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BackupFileInfo keys = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.storagepb.BackupFileInfo>}
 */
proto.storagepb.GetKeysAtPointResponse.prototype.getKeysList = function() {
  return /** @type{!Array.<!proto.storagepb.BackupFileInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.storagepb.BackupFileInfo, 1));
};


/** @param {!Array.<!proto.storagepb.BackupFileInfo>} value */
proto.storagepb.GetKeysAtPointResponse.prototype.setKeysList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.storagepb.BackupFileInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.storagepb.BackupFileInfo}
 */
proto.storagepb.GetKeysAtPointResponse.prototype.addKeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.storagepb.BackupFileInfo, opt_index);
};


proto.storagepb.GetKeysAtPointResponse.prototype.clearKeysList = function() {
  this.setKeysList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storagepb.BackupFileInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.storagepb.BackupFileInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storagepb.BackupFileInfo.displayName = 'proto.storagepb.BackupFileInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storagepb.BackupFileInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.storagepb.BackupFileInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storagepb.BackupFileInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.storagepb.BackupFileInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    backupType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    key: jspb.Message.getFieldWithDefault(msg, 3, ""),
    size: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storagepb.BackupFileInfo}
 */
proto.storagepb.BackupFileInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storagepb.BackupFileInfo;
  return proto.storagepb.BackupFileInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storagepb.BackupFileInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storagepb.BackupFileInfo}
 */
proto.storagepb.BackupFileInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackupType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storagepb.BackupFileInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storagepb.BackupFileInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storagepb.BackupFileInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.storagepb.BackupFileInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBackupType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string storage_type = 1;
 * @return {string}
 */
proto.storagepb.BackupFileInfo.prototype.getStorageType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.storagepb.BackupFileInfo.prototype.setStorageType = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string backup_type = 2;
 * @return {string}
 */
proto.storagepb.BackupFileInfo.prototype.getBackupType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.storagepb.BackupFileInfo.prototype.setBackupType = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string key = 3;
 * @return {string}
 */
proto.storagepb.BackupFileInfo.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.storagepb.BackupFileInfo.prototype.setKey = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 size = 4;
 * @return {number}
 */
proto.storagepb.BackupFileInfo.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.storagepb.BackupFileInfo.prototype.setSize = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storagepb.GetFileByKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.storagepb.GetFileByKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storagepb.GetFileByKeyRequest.displayName = 'proto.storagepb.GetFileByKeyRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storagepb.GetFileByKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.storagepb.GetFileByKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storagepb.GetFileByKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.storagepb.GetFileByKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storageType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storagepb.GetFileByKeyRequest}
 */
proto.storagepb.GetFileByKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storagepb.GetFileByKeyRequest;
  return proto.storagepb.GetFileByKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storagepb.GetFileByKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storagepb.GetFileByKeyRequest}
 */
proto.storagepb.GetFileByKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storagepb.GetFileByKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storagepb.GetFileByKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storagepb.GetFileByKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.storagepb.GetFileByKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStorageType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.storagepb.GetFileByKeyRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.storagepb.GetFileByKeyRequest.prototype.setKey = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string storage_type = 2;
 * @return {string}
 */
proto.storagepb.GetFileByKeyRequest.prototype.getStorageType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.storagepb.GetFileByKeyRequest.prototype.setStorageType = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storagepb.FileStream = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.storagepb.FileStream, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storagepb.FileStream.displayName = 'proto.storagepb.FileStream';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storagepb.FileStream.prototype.toObject = function(opt_includeInstance) {
  return proto.storagepb.FileStream.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storagepb.FileStream} msg The msg instance to transform.
 * @return {!Object}
 */
proto.storagepb.FileStream.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: msg.getContent_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storagepb.FileStream}
 */
proto.storagepb.FileStream.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storagepb.FileStream;
  return proto.storagepb.FileStream.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storagepb.FileStream} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storagepb.FileStream}
 */
proto.storagepb.FileStream.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storagepb.FileStream.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storagepb.FileStream.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storagepb.FileStream} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.storagepb.FileStream.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes content = 1;
 * @return {!(string|Uint8Array)}
 */
proto.storagepb.FileStream.prototype.getContent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes content = 1;
 * This is a type-conversion wrapper around `getContent()`
 * @return {string}
 */
proto.storagepb.FileStream.prototype.getContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContent()));
};


/**
 * optional bytes content = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContent()`
 * @return {!Uint8Array}
 */
proto.storagepb.FileStream.prototype.getContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContent()));
};


/** @param {!(string|Uint8Array)} value */
proto.storagepb.FileStream.prototype.setContent = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storagepb.PurgePrevBackupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.storagepb.PurgePrevBackupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storagepb.PurgePrevBackupRequest.displayName = 'proto.storagepb.PurgePrevBackupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storagepb.PurgePrevBackupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.storagepb.PurgePrevBackupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storagepb.PurgePrevBackupRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.storagepb.PurgePrevBackupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storagepb.PurgePrevBackupRequest}
 */
proto.storagepb.PurgePrevBackupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storagepb.PurgePrevBackupRequest;
  return proto.storagepb.PurgePrevBackupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storagepb.PurgePrevBackupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storagepb.PurgePrevBackupRequest}
 */
proto.storagepb.PurgePrevBackupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storagepb.PurgePrevBackupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storagepb.PurgePrevBackupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storagepb.PurgePrevBackupRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.storagepb.PurgePrevBackupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.storagepb.PurgePrevBackupRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.storagepb.PurgePrevBackupRequest.prototype.setDb = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storagepb.PurgePrevBackupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.storagepb.PurgePrevBackupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storagepb.PurgePrevBackupResponse.displayName = 'proto.storagepb.PurgePrevBackupResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storagepb.PurgePrevBackupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.storagepb.PurgePrevBackupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storagepb.PurgePrevBackupResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.storagepb.PurgePrevBackupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storagepb.PurgePrevBackupResponse}
 */
proto.storagepb.PurgePrevBackupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storagepb.PurgePrevBackupResponse;
  return proto.storagepb.PurgePrevBackupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storagepb.PurgePrevBackupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storagepb.PurgePrevBackupResponse}
 */
proto.storagepb.PurgePrevBackupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storagepb.PurgePrevBackupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storagepb.PurgePrevBackupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storagepb.PurgePrevBackupResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.storagepb.PurgePrevBackupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.storagepb.PurgePrevBackupResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.storagepb.PurgePrevBackupResponse.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storagepb.GetBestStartTimeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.storagepb.GetBestStartTimeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storagepb.GetBestStartTimeRequest.displayName = 'proto.storagepb.GetBestStartTimeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storagepb.GetBestStartTimeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.storagepb.GetBestStartTimeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storagepb.GetBestStartTimeRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.storagepb.GetBestStartTimeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storagepb.GetBestStartTimeRequest}
 */
proto.storagepb.GetBestStartTimeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storagepb.GetBestStartTimeRequest;
  return proto.storagepb.GetBestStartTimeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storagepb.GetBestStartTimeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storagepb.GetBestStartTimeRequest}
 */
proto.storagepb.GetBestStartTimeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storagepb.GetBestStartTimeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storagepb.GetBestStartTimeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storagepb.GetBestStartTimeRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.storagepb.GetBestStartTimeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storagepb.GetBestStartTimeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.storagepb.GetBestStartTimeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storagepb.GetBestStartTimeResponse.displayName = 'proto.storagepb.GetBestStartTimeResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storagepb.GetBestStartTimeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.storagepb.GetBestStartTimeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storagepb.GetBestStartTimeResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.storagepb.GetBestStartTimeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    minute: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hour: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storagepb.GetBestStartTimeResponse}
 */
proto.storagepb.GetBestStartTimeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storagepb.GetBestStartTimeResponse;
  return proto.storagepb.GetBestStartTimeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storagepb.GetBestStartTimeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storagepb.GetBestStartTimeResponse}
 */
proto.storagepb.GetBestStartTimeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinute(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHour(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storagepb.GetBestStartTimeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storagepb.GetBestStartTimeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storagepb.GetBestStartTimeResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.storagepb.GetBestStartTimeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinute();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHour();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 minute = 1;
 * @return {number}
 */
proto.storagepb.GetBestStartTimeResponse.prototype.getMinute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.storagepb.GetBestStartTimeResponse.prototype.setMinute = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 hour = 2;
 * @return {number}
 */
proto.storagepb.GetBestStartTimeResponse.prototype.getHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.storagepb.GetBestStartTimeResponse.prototype.setHour = function(value) {
  jspb.Message.setField(this, 2, value);
};


goog.object.extend(exports, proto.storagepb);
